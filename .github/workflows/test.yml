name: Test with PHPUnit

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: git_guestbook_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Symfony dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Setup the app database
      env: 
        DATABASE_URL: postgresql://test_user:test_password@localhost:${{ job.services.postgres.ports[5432] }}/git_guestbook_test?serverVersion=13&charset=utf8
      run: >
        bash -c "php bin/console doctrine:migrations:migrate -n
        && php bin/console doctrine:fixtures:load -n"
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    
    - name: Cache node.js packages
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install Node.js dependencies
      run: yarn
    
    - name: Build static assets
      run: yarn build

    - name: Run tests
      env: 
        DATABASE_URL: postgresql://test_user:test_password@localhost:${{ job.services.postgres.ports[5432] }}/git_guestbook_test?serverVersion=13&charset=utf8
      run: php bin/phpunit
